{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "definitions": {
        "CommandSettings": {
            "description": "\n    Settings to be provided to a tool like ROBOT\n    ",
            "properties": {
                "memory_gb": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ComponentGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/ComponentProduct"
                },
                {
                    "properties": {
                        "directory": {
                            "default": "components",
                            "type": "string"
                        },
                        "products": {
                            "items": {
                                "$ref": "#/definitions/ComponentProduct"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "description": "\n    A configuration section that consists of a list of `ComponentProduct` descriptions\n\n    Controls extraction of import modules via robot extract into the \"components/\" directory\n    "
        },
        "ComponentProduct": {
            "description": "\n    Represents an individual component\n    Examples: a file external to the edit file that contains axioms that belong to this ontology\n    Components are usually maintained manually.\n    ",
            "properties": {
                "base_iris": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "filename": {
                    "type": "string"
                },
                "make_base": {
                    "default": false,
                    "type": "boolean"
                },
                "mappings": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source": {
                    "type": "string"
                },
                "sssom_tool_options": {
                    "type": "string"
                },
                "template_options": {
                    "type": "string"
                },
                "templates": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "use_mappings": {
                    "default": false,
                    "type": "boolean"
                },
                "use_template": {
                    "default": false,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DocumentationGroup": {
            "description": "\n    Setting for the repos documentation system\n    ",
            "properties": {
                "documentation_system": {
                    "default": "mkdocs",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ImportGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProductGroup"
                },
                {
                    "properties": {
                        "annotation_properties": {
                            "default": [
                                "rdfs:label",
                                "IAO:0000115"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "directory": {
                            "default": "imports/",
                            "type": "string"
                        },
                        "exclude_iri_patterns": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "export_obo": {
                            "default": false,
                            "type": "boolean"
                        },
                        "mirror_max_time_download": {
                            "default": 200,
                            "type": "integer"
                        },
                        "mirror_retry_download": {
                            "default": 4,
                            "type": "integer"
                        },
                        "module_type": {
                            "default": "slme",
                            "type": "string"
                        },
                        "module_type_slme": {
                            "default": "BOT",
                            "type": "string"
                        },
                        "products": {
                            "items": {
                                "$ref": "#/definitions/ImportProduct"
                            },
                            "type": "array"
                        },
                        "release_imports": {
                            "default": false,
                            "type": "boolean"
                        },
                        "slme_individuals": {
                            "default": "include",
                            "type": "string"
                        },
                        "use_base_merging": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ],
            "description": "\n    A configuration section that consists of a list of `ImportProduct` descriptions\n\n    Controls extraction of import modules via robot extract into the \"imports/\" directory\n    "
        },
        "ImportProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/Product"
                },
                {
                    "properties": {
                        "annotation_properties": {
                            "default": [
                                "rdfs:label",
                                "IAO:0000115"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "base_iris": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "is_large": {
                            "default": false,
                            "type": "boolean"
                        },
                        "make_base": {
                            "default": false,
                            "type": "boolean"
                        },
                        "mirror_from": {
                            "type": "string"
                        },
                        "mirror_type": {
                            "type": "string"
                        },
                        "module_type": {
                            "type": "string"
                        },
                        "module_type_slme": {
                            "default": "BOT",
                            "type": "string"
                        },
                        "slme_individuals": {
                            "default": "include",
                            "type": "string"
                        },
                        "use_base": {
                            "default": false,
                            "type": "boolean"
                        },
                        "use_gzipped": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ],
            "description": "\n    Represents an individual import\n    Examples: 'uberon' (in go)\n    Imports are typically built from an upstream source, but this can be configured\n    "
        },
        "PatternPipelineGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProductGroup"
                },
                {
                    "properties": {
                        "directory": {
                            "default": "../patterns/",
                            "type": "string"
                        },
                        "matches": {
                            "items": {
                                "$ref": "#/definitions/PatternPipelineProduct"
                            },
                            "type": "array"
                        },
                        "products": {
                            "items": {
                                "$ref": "#/definitions/PatternPipelineProduct"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "description": "\n    A configuration section that consists of a list of `PatternPipelineProduct` descriptions\n\n    Controls the handling of patterns data in the \"src/patterns/data\" directory\n    "
        },
        "PatternPipelineProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/Product"
                },
                {
                    "properties": {
                        "dosdp_tools_options": {
                            "default": "--obo-prefixes=true",
                            "type": "string"
                        },
                        "ontology": {
                            "default": "$(SRC)",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "description": "\n    Represents an individual pattern pipeline\n    Examples: manual curation pipeline, auto curation pipeline\n    Each pipeline gets their own specific directory\n    "
        },
        "Product": {
            "description": "\n    abstract base class for all products.\n\n    Here, a product is something that is produced by an ontology workflow.\n    A product can be manifested in different formats.\n    \n    For example, goslim_prok is a subset (aka slim) product from GO,\n    this can be manifest as obo, owl, json\n    ",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maintenance": {
                    "default": "manual",
                    "type": "string"
                },
                "rebuild_if_source_changes": {
                    "default": true,
                    "type": "boolean"
                },
                "robot_settings": {
                    "$ref": "#/definitions/CommandSettings"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "ProductGroup": {
            "description": "\n    abstract base class for all product groups.\n\n    A product group is a simple holder for a list of\n    groups, with the ability to set configurations that\n    hold by default for all within that group.\n\n    Note: currently the configuration can specify\n    EITHER a list of ontology ids (e.g. uberon, cl)\n    OR a list of product objects\n    OR some mixture\n\n    For example, in specifying upstream imports I can\n    be lazy and just list the ids, but if I need to\n    configure each one individually then I need to specify\n    the full product object.\n\n    This buys some simplicity for the majority of projects\n    that don't do anything fancy, but at the price of overall\n    complexity\n    ",
            "properties": {
                "disabled": {
                    "default": false,
                    "type": "boolean"
                },
                "ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rebuild_if_source_changes": {
                    "default": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SSSOMMappingSetGroup": {
            "description": "\n    A configuration section that consists of a list of `SSSOMMappingSetProduct` descriptions\n    ",
            "properties": {
                "directory": {
                    "default": "../mappings",
                    "type": "string"
                },
                "products": {
                    "items": {
                        "$ref": "#/definitions/SSSOMMappingSetProduct"
                    },
                    "type": "array"
                },
                "release_mappings": {
                    "default": false,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SSSOMMappingSetProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/Product"
                },
                {
                    "properties": {
                        "mirror_from": {
                            "type": "string"
                        },
                        "source_file": {
                            "type": "string"
                        },
                        "sssom_tools_options": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "description": "\n    Represents an SSSOM Mapping template template\n    "
        },
        "SubsetGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProductGroup"
                },
                {
                    "properties": {
                        "directory": {
                            "default": "subsets/",
                            "type": "string"
                        },
                        "products": {
                            "items": {
                                "$ref": "#/definitions/SubsetProduct"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "description": "\n    A configuration section that consists of a list of `SubsetProduct` descriptions\n\n    Controls export of subsets/slims into the \"subsets/\" directory\n    "
        },
        "SubsetProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/Product"
                },
                {
                    "properties": {
                        "creators": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "description": "\n    Represents an individual subset.\n    Examples: goslim_prok (in go), eco_subset (in ro)\n    "
        }
    },
    "description": "\n    A configuration for an ontology project/repository\n\n    This is divided into project-wide settings, plus\n    groups of products. Products are grouped into 4\n    categories (more may be added)\n    ",
    "properties": {
        "allow_equivalents": {
            "default": "asserted-only",
            "type": "string"
        },
        "catalog_file": {
            "default": "catalog-v001.xml",
            "type": "string"
        },
        "ci": {
            "default": [
                "github_actions"
            ],
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "components": {
            "$ref": "#/definitions/ComponentGroup"
        },
        "contact": {
            "type": "string"
        },
        "contributors": {
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "create_obo_metadata": {
            "default": true,
            "type": "boolean"
        },
        "creators": {
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "custom_makefile_header": {
            "default": "\n# ----------------------------------------\n# More information: https://github.com/INCATools/ontology-development-kit/\n",
            "type": "string"
        },
        "description": {
            "default": "None",
            "type": "string"
        },
        "documentation": {
            "$ref": "#/definitions/DocumentationGroup"
        },
        "dosdp_tools_options": {
            "default": "--obo-prefixes=true",
            "type": "string"
        },
        "edit_format": {
            "default": "owl",
            "type": "string"
        },
        "ensure_valid_rdfxml": {
            "default": false,
            "type": "boolean"
        },
        "exclude_tautologies": {
            "default": "structural",
            "type": "string"
        },
        "export_formats": {
            "default": [
                "owl",
                "obo"
            ],
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "export_project_yaml": {
            "default": false,
            "type": "boolean"
        },
        "git_main_branch": {
            "default": "main",
            "type": "string"
        },
        "git_user": {
            "default": "",
            "type": "string"
        },
        "github_org": {
            "default": "",
            "type": "string"
        },
        "gzip_main": {
            "default": false,
            "type": "boolean"
        },
        "id": {
            "default": "",
            "type": "string"
        },
        "import_component_format": {
            "default": "ofn",
            "type": "string"
        },
        "import_group": {
            "$ref": "#/definitions/ImportGroup"
        },
        "import_pattern_ontology": {
            "default": false,
            "type": "boolean"
        },
        "license": {
            "default": "https://creativecommons.org/licenses/unspecified",
            "type": "string"
        },
        "namespaces": {
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "obo_format_options": {
            "default": "",
            "type": "string"
        },
        "owltools_memory": {
            "default": "",
            "type": "string"
        },
        "pattern_pipelines_group": {
            "$ref": "#/definitions/PatternPipelineGroup"
        },
        "primary_release": {
            "default": "full",
            "type": "string"
        },
        "public_release": {
            "default": "none",
            "type": "string"
        },
        "public_release_assets": {
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "reasoner": {
            "default": "ELK",
            "type": "string"
        },
        "release_artefacts": {
            "default": [
                "full",
                "base"
            ],
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "release_date": {
            "default": false,
            "type": "boolean"
        },
        "release_diff": {
            "default": false,
            "type": "boolean"
        },
        "release_use_reasoner": {
            "default": true,
            "type": "boolean"
        },
        "remove_owl_nothing": {
            "default": false,
            "type": "boolean"
        },
        "repo": {
            "default": "",
            "type": "string"
        },
        "robot_java_args": {
            "default": "",
            "type": "string"
        },
        "robot_report": {
            "default": {
                "custom_profile": false,
                "custom_sparql_checks": [
                    "owldef-self-reference",
                    "iri-range",
                    "label-with-iri",
                    "multiple-replaced_by"
                ],
                "custom_sparql_exports": [
                    "basic-report",
                    "class-count-by-prefix",
                    "edges",
                    "xrefs",
                    "obsoletes",
                    "synonyms"
                ],
                "ensure_owl2dl_profile": true,
                "fail_on": null,
                "release_reports": false,
                "report_on": [
                    "edit"
                ],
                "sparql_test_on": [
                    "edit"
                ],
                "use_base_iris": true,
                "use_labels": true
            },
            "type": "object"
        },
        "robot_settings": {
            "$ref": "#/definitions/CommandSettings"
        },
        "robot_version": {
            "type": "string"
        },
        "sssom_mappingset_group": {
            "$ref": "#/definitions/SSSOMMappingSetGroup"
        },
        "subset_group": {
            "$ref": "#/definitions/SubsetGroup"
        },
        "title": {
            "default": "",
            "type": "string"
        },
        "travis_emails": {
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "uribase": {
            "default": "http://purl.obolibrary.org/obo",
            "type": "string"
        },
        "uribase_suffix": {
            "type": "string"
        },
        "use_context": {
            "default": false,
            "type": "boolean"
        },
        "use_custom_import_module": {
            "default": false,
            "type": "boolean"
        },
        "use_dosdps": {
            "default": false,
            "type": "boolean"
        },
        "use_edit_file_imports": {
            "default": true,
            "type": "boolean"
        },
        "use_env_file_docker": {
            "default": false,
            "type": "boolean"
        },
        "use_external_date": {
            "default": false,
            "type": "boolean"
        },
        "use_mappings": {
            "default": false,
            "type": "boolean"
        },
        "use_templates": {
            "default": false,
            "type": "boolean"
        },
        "workflows": {
            "default": [
                "docs"
            ],
            "items": {
                "type": "string"
            },
            "type": "array"
        }
    },
    "type": "object"
}
{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "allOf": [
        {
            "$ref": "#/definitions/Product"
        },
        {
            "properties": {
                "annotation_properties": {
                    "default": [
                        "rdfs:label",
                        "IAO:0000115"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "base_iris": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "is_large": {
                    "default": false,
                    "type": "boolean"
                },
                "make_base": {
                    "default": false,
                    "type": "boolean"
                },
                "mirror_from": {
                    "type": "string"
                },
                "mirror_type": {
                    "type": "string"
                },
                "module_type": {
                    "type": "string"
                },
                "module_type_slme": {
                    "default": "BOT",
                    "type": "string"
                },
                "slme_individuals": {
                    "default": "include",
                    "type": "string"
                },
                "use_base": {
                    "default": false,
                    "type": "boolean"
                },
                "use_gzipped": {
                    "default": false,
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    ],
    "definitions": {
        "CommandSettings": {
            "description": "\n    Settings to be provided to a tool like ROBOT\n    ",
            "properties": {
                "memory_gb": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Product": {
            "description": "\n    abstract base class for all products.\n\n    Here, a product is something that is produced by an ontology workflow.\n    A product can be manifested in different formats.\n    \n    For example, goslim_prok is a subset (aka slim) product from GO,\n    this can be manifest as obo, owl, json\n    ",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maintenance": {
                    "default": "manual",
                    "type": "string"
                },
                "rebuild_if_source_changes": {
                    "default": true,
                    "type": "boolean"
                },
                "robot_settings": {
                    "$ref": "#/definitions/CommandSettings"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        }
    },
    "description": "\n    Represents an individual import\n    Examples: 'uberon' (in go)\n    Imports are typically built from an upstream source, but this can be configured\n    "
}
{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "allOf": [
        {
            "$ref": "#/definitions/Product"
        },
        {
            "properties": {
                "dosdp_tools_options": {
                    "default": "--obo-prefixes=true",
                    "type": "string"
                },
                "ontology": {
                    "default": "$(SRC)",
                    "type": "string"
                }
            },
            "type": "object"
        }
    ],
    "definitions": {
        "CommandSettings": {
            "description": "\n    Settings to be provided to a tool like ROBOT\n    ",
            "properties": {
                "memory_gb": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Product": {
            "description": "\n    abstract base class for all products.\n\n    Here, a product is something that is produced by an ontology workflow.\n    A product can be manifested in different formats.\n    \n    For example, goslim_prok is a subset (aka slim) product from GO,\n    this can be manifest as obo, owl, json\n    ",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maintenance": {
                    "default": "manual",
                    "type": "string"
                },
                "rebuild_if_source_changes": {
                    "default": true,
                    "type": "boolean"
                },
                "robot_settings": {
                    "$ref": "#/definitions/CommandSettings"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        }
    },
    "description": "\n    Represents an individual pattern pipeline\n    Examples: manual curation pipeline, auto curation pipeline\n    Each pipeline gets their own specific directory\n    "
}
